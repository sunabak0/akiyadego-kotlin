#!/bin/bash

################################################################################
# Check for submodule updates
################################################################################
#
# 概要
# - submodule に更新があるかチェック
#
# exit code: 0 : 更新はない ( 最新状態である )
# exit code: 1 : 更新がある
#

GIT_SUBMODULE="akiyadego-openapi"
readonly GIT_SUBMODULE

#
# submodule での作業内容を退避
#
function stash_on_git_submodule() {
  cd "${GIT_SUBMODULE}" || exit 1
  git stage .
  git stash -q -m "$(date +%Y-%m-%dT%H:%M:%S) : check-for-submodule-updates によって stash しました" > /dev/null
  cd - || exit 1
}

#
# 更新があるか確認
#
function exist_diff_from_the_latest() {
  git submodule update --init --recursive --remote -- "${GIT_SUBMODULE}" > /dev/null
  git status --short ${GIT_SUBMODULE} | wc -l | grep -q 0
}

#
# Main
#
function main() {
  stash_on_git_submodule
  if exist_diff_from_the_latest; then
    echo ""
    echo "👍 Nothing submodule updates: ${GIT_SUBMODULE} submodule is latest."
    echo ""
    # 現在の branch の submodule の状態に戻す
    git submodule update -- "${GIT_SUBMODULE}" > /dev/null
    exit 0
  else
    echo ""
    echo "🧐 Found submodule updates: ${GIT_SUBMODULE} submodule is up to date." >&2
    echo ""
    # 現在の branch の submodule の状態に戻す
    git submodule update -- "${GIT_SUBMODULE}" > /dev/null
    exit 1
  fi
}

main
